#!/bin/sh
#
#This file is for Multi-Node test
#

MESSAGE_PREFIX="<LAVA_MULTI_NODE>"
MESSAGE_COMMAND="<${LAVA_MULTI_NODE_API}"
MESSAGE_HEAD="$MESSAGE_PREFIX $MESSAGE_COMMAND"
#MESSAGE_ID="<$1>"
MESSAGE_ACK="<${LAVA_MULTI_NODE_API}_ACK>"

MESSAGE_REPLY="<${LAVA_MULTI_NODE_API}_COMPLETE"
MESSAGE_REPLY_ACK="<${LAVA_MULTI_NODE_API}_COMPLETE_ACK>"

_get_key_value_pattern () {
	echo $@|\
	tr ' ' '\n' |\
	sed -n '/\b\w\w*[=]\w\w*\b/p'|\
	tr '\n' ' '
}

_lava_multi_node_send () {
echo "<_LAVA_SEND started>"
result=$(echo $1 | grep "..*=..*")
echo "<_LAVA_SEND result $result>"
if [ -n "$1" -a "${result}x" == "x" ] ; then
	echo ${MESSAGE_HEAD} $@">"
else
	exit 1
fi
echo "<_LAVA_SEND finished>"
}

_lava_multi_node_print_message () {
until [ -z "$1" ] ; do
	result=$(echo $1 | grep "..*=..*")
	if [ "${result}x" != "x" ] ; then
		echo $1
	fi
	shift
done
}

lava_multi_node_send () {
echo "<LAVA_SEND preparing>"
_lava_multi_node_send $@
echo "<LAVA_SEND waiting for ack>"
while [ -n "$MESSAGE_NEED_ACK" ] ; do
	read -t $MESSAGE_TIMEOUT line
	result=$(echo $line | grep "${MESSAGE_ACK}")
	if [ "${result}x" != "x" ] ; then
#		echo ${MESSAGE_ACK}
		break
	fi
	_lava_multi_node_send $@
done
echo "<LAVA_SEND finished>"
date
}

lava_multi_node_wait_for_signal () {
date
echo "<LAVA_DEBUG starting to wait>"
while read line; do
	result=$(echo $line | grep "${MESSAGE_REPLY}>")
	if [ "${result}x" != "x" ] ; then
		if [ -n "$MESSAGE_NEED_ACK" ] ; then
			echo ${MESSAGE_REPLY_ACK}
		fi
		break
	fi
done
echo "<LAVA_DEBUG waiting over>"
date
}

lava_multi_node_wait_for_message () {
while read line; do
	result=$(echo $line | grep "${MESSAGE_REPLY}")
	if [ "${result}x" != "x" ] ; then
		line=${line##*${MESSAGE_REPLY}}
		_lava_multi_node_print_message ${line%%>*}
		if [ -n "$MESSAGE_NEED_ACK" ] ; then
			echo ${MESSAGE_REPLY_ACK}
		fi
		break
	fi
done
}


