Dependencies
------------

LAVA needs python >= 2.6.

For the LAVA client, you need the pexpect module.


Configuring for local development
---------------------------------

You will need to have a card containing a 'master image' for your
board.  The process of creating a master image is outlined on
https://wiki.linaro.org/Platform/Validation/Specs/MasterBootImage.

For LAVA development and testing using only locally attached resources,
you should be able to make use of most features, even without the use of
special equipment such as a console server.

First install conmux and cu:
    sudo add-apt-repository ppa:linaro-maintainers/tools
    sudo apt-get update
    sudo apt-get install conmux cu

Connect a development board to a local serial device (e.g. ttyUSB0).
You may have permission problem with cu running as root under conmux.

Create a configuration file for your board under /etc/conmux which
should look something like this:
    listener panda01
    application console 'panda01 console' 'cu -l /dev/ttyUSB0 -s 115200'
Make sure to give the file a '.cf' extension (e.g. panda01.cf).

If you see this permission problem when running cu, you can try
adjusting your .cf file to call cu using sg, and the group name owning
the device.  For example:
    sg dialout "cu -l ttyUSB0 -s 115200"

Finally restart conmux:
    sudo stop conmux
    sudo start conmux

You can test the connection using:
    conmux-console panda01
    (use ~$quit to exit)

You should be able to type commands and interact with the shell inside
conmux-console.  If you cannot, run "sudo stop conmux" and try running
'sg dialout "cu -l ttyUSB0 -s 115200"'.  If that doesn't work, you
probably need to add some files to /etc/uucp.  Add

port ttyUSB0
type direct
device /dev/ttyUSB0
hardflow false
speed 115200

to /etc/uucp/port and append

system  panda01
port    ttyUSB0
time    any

to /etc/uucp/sys.  If this doesn't let you interact with the shell in
conmux-console, complain in #linaro on freenode and hopefully someone
will help you out :)

Make a directory which is defined as LAVA_IMAGE_TMPDIR in 
lava/dispatcher/config.py:
mkdir -p /linaro/images/tmp

Define LAVA_SERVER_IP to your local LAVA server if you want to use local one in
config.py.

Setup a web server(like Apache), and make root directory as /linaro. 

Setup a dashboard server launch-control:
add-apt-repository ppa:zkrynicki/lava
apt-get update
apt-get purge launch-control (if there is an old one)
apt-get install launch-control-pqsql
apt-get install launch-control
sudo -u www-data python /usr/lib/launch-control/manage.py createsuperuser

Modify the server in job file doc/lava-ltp-job.json to local launch-control
url, like:
http://127.0.0.1/launch-control
    {
      "command": "submit_results",
      "parameters":
        {
          "server": "http://dashboard.linaro.org",
          "stream": "panda01-ltp"
        }
    }


Logging:
Conmux keeps logs in /var/log/conmux.  If it cannot attach to the
device, it may continually send output to the log every few seconds.
For non-production purposes, you may simply want to run 'sudo stop
conmux' when you are not using the console, to avoid needlessly growing
large logfiles.


Dispatching a job
-----------------

You will want to edit lava/dispatcher/config.py to change the value of
LAVA_SERVER_IP to, at least, a machine that exists on your network.

There are other things that you need to edit in here XXX explain some
of this stuff.

From the toplevel, run (as root):

    ./lava-dispatch doc/lava-ltp-job.json

